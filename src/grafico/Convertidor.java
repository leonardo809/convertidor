/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grafico;

import codigo.longitud;
import codigo.masaypeso;
import codigo.superficie;
import codigo.temperatura;
import codigo.velocidad;
import codigo.volumen;
import java.applet.AudioClip;
import java.awt.Cursor;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author leonardo
 */
public class Convertidor extends javax.swing.JFrame {

    /**
     * Creates new form Convertidor
     */
    public Convertidor() {
        initComponents();
        this.setLocationRelativeTo(null);
        cmb_de.setEnabled(false);
        cmb_a.setEnabled(false);
        btn_limpiar.setEnabled(false);
        btn_convertir.setEnabled(false);
        txtf_convertir.setEnabled(false);
        cursores();
        imagenes();
        aux=cmb_unidades.getSelectedItem().toString();
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/log.png")).getImage());
    }
    
    private void cursores(){
        Cursor cursor;
        ImageIcon imagen=new ImageIcon(getClass().getResource("/cursores/cflecha.png"));
        Toolkit t=Toolkit.getDefaultToolkit();
        cursor=t.createCustomCursor(imagen.getImage(), new Point(1,1), "cursor");
        setCursor(cursor);
    }
    private void imagenes(){
        ImageIcon fondo=new ImageIcon(getClass().getResource("/fondos/p3.gif"));
        Icon imagen1=new ImageIcon(fondo.getImage().getScaledInstance(lbl_fondo.getWidth(), lbl_fondo.getHeight(), Image.SCALE_DEFAULT));
        lbl_fondo.setIcon(imagen1);
        this.repaint();
    }
    private void bloqueo(){
        if(!aux.equals("Selecciona una unidad")){
            cmb_de.setEnabled(true);
            cmb_de.setEnabled(true);
            cmb_a.setEnabled(true);
            txtf_convertir.setEnabled(true);
        }
        else{
           
            cmb_de.setEnabled(false);
            cmb_a.setEnabled(false);
            txtf_convertir.setEnabled(false);
            btn_limpiar.setEnabled(false);
            btn_convertir.setEnabled(false);
        }
    }
    private void bloqueo2(){
        if((!txtf_convertir.getText().isEmpty())){
            cmb_a.setEnabled(true);
            btn_convertir.setEnabled(true);
            btn_limpiar.setEnabled(true);
            
        }
        else{
            btn_limpiar.setEnabled(false);
            btn_convertir.setEnabled(false);
        }
    }
    
    private AudioClip sonidom,sonidos,sonidol, sonidoc, sonidoca;
    private int x,y,z;
    private String aux,aux2,aux3;
    private double aux4;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_minimizar = new javax.swing.JButton();
        bt_salir = new javax.swing.JButton();
        lb_encabezado = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cmb_unidades = new javax.swing.JComboBox<>();
        lbl_de = new javax.swing.JLabel();
        lbl_a = new javax.swing.JLabel();
        lbl_resultado = new javax.swing.JLabel();
        lbl_convertir = new javax.swing.JLabel();
        lbl_unidad = new javax.swing.JLabel();
        txtf_convertir = new javax.swing.JTextField();
        cmb_de = new javax.swing.JComboBox<>();
        cmb_a = new javax.swing.JComboBox<>();
        lbl_conversion = new javax.swing.JLabel();
        btn_convertir = new javax.swing.JButton();
        btn_limpiar = new javax.swing.JButton();
        lbl_fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(810, 523));
        setMinimumSize(new java.awt.Dimension(810, 523));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_minimizar.setFont(new java.awt.Font("Tahoma", 1, 40)); // NOI18N
        btn_minimizar.setForeground(new java.awt.Color(255, 255, 255));
        btn_minimizar.setText("-");
        btn_minimizar.setToolTipText("Minimizar");
        btn_minimizar.setBorder(null);
        btn_minimizar.setBorderPainted(false);
        btn_minimizar.setContentAreaFilled(false);
        btn_minimizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_minimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_minimizarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_minimizarMouseExited(evt);
            }
        });
        btn_minimizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_minimizarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_minimizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 10, 30, 20));

        bt_salir.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        bt_salir.setForeground(new java.awt.Color(255, 255, 255));
        bt_salir.setText("x");
        bt_salir.setToolTipText("Cerrar");
        bt_salir.setBorder(null);
        bt_salir.setBorderPainted(false);
        bt_salir.setContentAreaFilled(false);
        bt_salir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bt_salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bt_salirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bt_salirMouseExited(evt);
            }
        });
        bt_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_salirActionPerformed(evt);
            }
        });
        jPanel1.add(bt_salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 10, -1, 20));

        lb_encabezado.setBackground(new java.awt.Color(204, 0, 204));
        lb_encabezado.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lb_encabezado.setForeground(new java.awt.Color(255, 255, 255));
        lb_encabezado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_encabezado.setText("Convertidor de unidades");
        lb_encabezado.setOpaque(true);
        lb_encabezado.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lb_encabezadoMouseDragged(evt);
            }
        });
        lb_encabezado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lb_encabezadoMousePressed(evt);
            }
        });
        jPanel1.add(lb_encabezado, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, 50));

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 810, 50);

        jPanel2.setBackground(new java.awt.Color(51, 255, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmb_unidades.setBackground(new java.awt.Color(0, 204, 204));
        cmb_unidades.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmb_unidades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona una unidad", "Longitud", "Superficie", "Volumen", "Masa y peso", "Velocidad", "Temperatura" }));
        cmb_unidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_unidadesActionPerformed(evt);
            }
        });
        jPanel2.add(cmb_unidades, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 230, 40));

        lbl_de.setFont(new java.awt.Font("Trebuchet MS", 0, 24)); // NOI18N
        lbl_de.setForeground(new java.awt.Color(255, 255, 255));
        lbl_de.setText("De:");
        jPanel2.add(lbl_de, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        lbl_a.setFont(new java.awt.Font("Trebuchet MS", 0, 24)); // NOI18N
        lbl_a.setForeground(new java.awt.Color(255, 255, 255));
        lbl_a.setText("A:");
        jPanel2.add(lbl_a, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 150, -1, -1));

        lbl_resultado.setFont(new java.awt.Font("Trebuchet MS", 0, 24)); // NOI18N
        lbl_resultado.setForeground(new java.awt.Color(255, 255, 255));
        lbl_resultado.setText("Resultado:");
        jPanel2.add(lbl_resultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, -1, -1));

        lbl_convertir.setFont(new java.awt.Font("Trebuchet MS", 0, 24)); // NOI18N
        lbl_convertir.setForeground(new java.awt.Color(255, 255, 255));
        lbl_convertir.setText("Convertir:");
        jPanel2.add(lbl_convertir, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, -1));

        lbl_unidad.setFont(new java.awt.Font("Trebuchet MS", 0, 24)); // NOI18N
        lbl_unidad.setForeground(new java.awt.Color(255, 255, 255));
        lbl_unidad.setText("Unidad:");
        jPanel2.add(lbl_unidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, 20));

        txtf_convertir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtf_convertir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtf_convertirMouseEntered(evt);
            }
        });
        txtf_convertir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtf_convertirKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtf_convertirKeyTyped(evt);
            }
        });
        jPanel2.add(txtf_convertir, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, 190, 30));

        cmb_de.setBackground(new java.awt.Color(255, 153, 0));
        cmb_de.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel2.add(cmb_de, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 210, 40));

        cmb_a.setBackground(new java.awt.Color(153, 0, 153));
        cmb_a.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel2.add(cmb_a, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 150, 210, 40));

        lbl_conversion.setFont(new java.awt.Font("Trebuchet MS", 0, 24)); // NOI18N
        lbl_conversion.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(lbl_conversion, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 320, 250, 30));

        btn_convertir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/con70.png"))); // NOI18N
        btn_convertir.setToolTipText("Convertir");
        btn_convertir.setBorder(null);
        btn_convertir.setBorderPainted(false);
        btn_convertir.setContentAreaFilled(false);
        btn_convertir.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/con75.png"))); // NOI18N
        btn_convertir.setVerifyInputWhenFocusTarget(false);
        btn_convertir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_convertirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_convertirMouseExited(evt);
            }
        });
        btn_convertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_convertirActionPerformed(evt);
            }
        });
        jPanel2.add(btn_convertir, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, 90, 80));

        btn_limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/l70.png"))); // NOI18N
        btn_limpiar.setToolTipText("Limpiar");
        btn_limpiar.setBorder(null);
        btn_limpiar.setBorderPainted(false);
        btn_limpiar.setContentAreaFilled(false);
        btn_limpiar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/l75.png"))); // NOI18N
        btn_limpiar.setVerifyInputWhenFocusTarget(false);
        btn_limpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_limpiarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_limpiarMouseExited(evt);
            }
        });
        btn_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarActionPerformed(evt);
            }
        });
        jPanel2.add(btn_limpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 10, 80, 80));

        lbl_fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondos/p3.gif"))); // NOI18N
        jPanel2.add(lbl_fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, 470));

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 50, 810, 470);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_minimizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_minimizarMouseEntered
        sonidom= java.applet.Applet.newAudioClip(getClass().getResource("/audio/minimizar.wav"));
        sonidom.play();
        Cursor mano;
        ImageIcon imagen=new ImageIcon(getClass().getResource("/cursores/cmano.png"));
        Toolkit t=Toolkit.getDefaultToolkit();
        mano=t.createCustomCursor(imagen.getImage(), new Point(1,1), "cursor");
        btn_minimizar.setCursor(mano);
    }//GEN-LAST:event_btn_minimizarMouseEntered

    private void btn_minimizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_minimizarActionPerformed
        this.setExtendedState(ICONIFIED);
        this.setExtendedState(1);
    }//GEN-LAST:event_btn_minimizarActionPerformed

    private void bt_salirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_salirMouseEntered
        sonidos= java.applet.Applet.newAudioClip(getClass().getResource("/audio/cerrar.wav"));
        sonidos.play();
        Cursor mano;
        ImageIcon imagen=new ImageIcon(getClass().getResource("/cursores/cmano.png"));
        Toolkit t=Toolkit.getDefaultToolkit();
        mano=t.createCustomCursor(imagen.getImage(), new Point(1,1), "cursor");
        bt_salir.setCursor(mano);
    }//GEN-LAST:event_bt_salirMouseEntered

    private void bt_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_salirActionPerformed
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_bt_salirActionPerformed

    private void lb_encabezadoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_encabezadoMouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
    }//GEN-LAST:event_lb_encabezadoMouseDragged

    private void lb_encabezadoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_encabezadoMousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_lb_encabezadoMousePressed

    private void btn_convertirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_convertirMouseEntered
        sonidoc= java.applet.Applet.newAudioClip(getClass().getResource("/audio/Convertir.wav"));
        sonidoc.play();
        Cursor mano;
        ImageIcon imagen=new ImageIcon(getClass().getResource("/cursores/cmano.png"));
        Toolkit t=Toolkit.getDefaultToolkit();
        mano=t.createCustomCursor(imagen.getImage(), new Point(1,1), "cursor");
        btn_convertir.setCursor(mano);
    }//GEN-LAST:event_btn_convertirMouseEntered

    private void btn_limpiarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_limpiarMouseEntered
        sonidol= java.applet.Applet.newAudioClip(getClass().getResource("/audio/Limpiar.wav"));
        sonidol.play();
        Cursor mano;
        ImageIcon imagen=new ImageIcon(getClass().getResource("/cursores/cmano.png"));
        Toolkit t=Toolkit.getDefaultToolkit();
        mano=t.createCustomCursor(imagen.getImage(), new Point(1,1), "cursor");
        btn_limpiar.setCursor(mano);
        txtf_convertir.setText("");
    }//GEN-LAST:event_btn_limpiarMouseEntered

    private void btn_convertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_convertirActionPerformed
        longitud Longitud=new longitud();
        masaypeso MyP=new masaypeso();
        superficie Superficie=new superficie();
        temperatura Temperatura=new temperatura();
        velocidad Velocidad=new velocidad();
        volumen Volumen=new volumen();
        aux2=cmb_de.getSelectedItem().toString();
        aux3=cmb_a.getSelectedItem().toString();

        aux4=Double.parseDouble(txtf_convertir.getText());
        switch(aux){
            case "Longitud":
                lbl_conversion.setText(Longitud.metro2al(Double.parseDouble(Longitud.al2metro(aux4, aux2)), aux3));
            break;
            case "Superficie":
                lbl_conversion.setText(Superficie.metroc2as(Double.parseDouble(Superficie.as2metroc(aux4, aux2)), aux3));
            break;
            case "Volumen":
                lbl_conversion.setText(Volumen.litro2av(Double.parseDouble(Volumen.av2litro(aux4, aux2)), aux3));
            break;
            case "Masa y peso":
                lbl_conversion.setText(MyP.gramo2amaw(Double.parseDouble(MyP.amaw2gramo(aux4, aux2)), aux3));
            break;
            case "Velocidad":
                lbl_conversion.setText(Velocidad.mss2av(Double.parseDouble(Velocidad.av2mss(aux4, aux2)), aux3));
            break;
            case"Temperatura":
                lbl_conversion.setText(Temperatura.c2at(Double.parseDouble(Temperatura.at2c(aux4, aux2)), aux3));
            break;
        }
    }//GEN-LAST:event_btn_convertirActionPerformed

    private void btn_minimizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_minimizarMouseExited
        sonidom.stop();
    }//GEN-LAST:event_btn_minimizarMouseExited

    private void bt_salirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_salirMouseExited
        sonidos.stop();
    }//GEN-LAST:event_bt_salirMouseExited

    private void btn_limpiarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_limpiarMouseExited
        sonidol.stop();
    }//GEN-LAST:event_btn_limpiarMouseExited

    private void btn_convertirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_convertirMouseExited
        sonidoc.stop();
    }//GEN-LAST:event_btn_convertirMouseExited

    private void cmb_unidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_unidadesActionPerformed
        aux=cmb_unidades.getSelectedItem().toString();
        cmb_de.removeAllItems();
        cmb_a.removeAllItems();
        z=1;
        switch(aux){
            case "Longitud":
                cmb_de.addItem("Kilómetro(km)");
                cmb_de.addItem("Metro(m)");
                cmb_de.addItem("Decímetro(dm)");
                cmb_de.addItem("Centímetro(cm)");
                cmb_de.addItem("Milímetro(mm)");
                cmb_a.addItem("Milla(ml)");
                cmb_a.addItem("Yarda(yd)");
                cmb_a.addItem("Pie(ft)");
                cmb_a.addItem("Pulgada(in)");
            break;
            case "Superficie":
                cmb_a.addItem("Kilómetro cuadrado");
                cmb_a.addItem("Hectárea(ha)");                
                cmb_a.addItem("Metro cuadrado");                
                cmb_de.addItem("Kilómetro cuadrado");
                cmb_de.addItem("Hectárea(ha)");                
                cmb_de.addItem("Metro cuadrado");                
                cmb_a.addItem("Milla cuadrada");
                cmb_a.addItem("Acre");                
                cmb_a.addItem("Pie cuadrado");
                cmb_a.addItem("Pulgada cuadrada");
                cmb_de.addItem("Milla cuadrada");
                cmb_de.addItem("Acre");                
                cmb_de.addItem("Pie cuadrado");
                cmb_de.addItem("Pulgada cuadrada");
            break;
            case "Volumen":
                cmb_de.addItem("Metro Cúbico");
                cmb_de.addItem("Litro");                
                cmb_de.addItem("Mililitro");
                cmb_de.addItem("Centímetro cúbico");
                cmb_a.addItem("Metro Cúbico");
                cmb_a.addItem("Litro");                
                cmb_a.addItem("Mililitro");
                cmb_a.addItem("Centímetro cúbico");
                cmb_a.addItem("Barril");                
                cmb_a.addItem("Galón(gal)");                
                cmb_a.addItem("Pinta(pt)");                
                cmb_a.addItem("Onza líquida(oz)");                
                cmb_de.addItem("Barril");                
                cmb_de.addItem("Galón(gal)");                
                cmb_de.addItem("Pinta(pt)");                
                cmb_de.addItem("Onza líquida(oz)");                
            break;
            case "Masa y peso":
                cmb_de.addItem("Tonelada(t)");                
                cmb_de.addItem("Kilogramo(kg)");                
                cmb_de.addItem("Gramo(g)");            
                cmb_a.addItem("Tonelada(t)");                
                cmb_a.addItem("Kilogramo(kg)");                
                cmb_a.addItem("Gramo(g)");            
                cmb_a.addItem("Tonelada corta");
                cmb_a.addItem("Libra(lb)");
                cmb_a.addItem("Onza");
                cmb_de.addItem("Tonelada corta");
                cmb_de.addItem("Libra(lb)");
                cmb_de.addItem("Onza");
            break;
            case "Velocidad":
                cmb_de.addItem("km/s");
                cmb_de.addItem("m/s");
                cmb_de.addItem("km/h");
                cmb_a.addItem("km/s");
                cmb_a.addItem("m/s");
                cmb_a.addItem("km/h");
                cmb_a.addItem("Milla por segundo");
                cmb_a.addItem("Milla por hora");
                cmb_a.addItem("Pie por segundo");
                cmb_a.addItem("nudo");
                cmb_de.addItem("Milla por segundo");
                cmb_de.addItem("Milla por hora");
                cmb_de.addItem("Pie por segundo");
                cmb_de.addItem("nudo");
            break;
            case "Temperatura":
                cmb_de.addItem("Celsius");
                cmb_de.addItem("Fahrenheit");
                cmb_de.addItem("Kelvin");
                cmb_a.addItem("Celsius");
                cmb_a.addItem("Fahrenheit");
                cmb_a.addItem("Kelvin");
            break;
        }
        bloqueo();
        
    }//GEN-LAST:event_cmb_unidadesActionPerformed

    private void txtf_convertirKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtf_convertirKeyReleased
        bloqueo2();
    }//GEN-LAST:event_txtf_convertirKeyReleased

    private void txtf_convertirKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtf_convertirKeyTyped
        char validar=evt.getKeyChar();
        if(((validar<'.')||(validar>'.')) && ((validar<'0') || (validar>'9'))) evt.consume();
        if(validar=='.'&&txtf_convertir.getText().contains(".")) evt.consume();
        if(txtf_convertir.getText().length()>=7)evt.consume();
    }//GEN-LAST:event_txtf_convertirKeyTyped

    private void txtf_convertirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtf_convertirMouseEntered
        Cursor escribir;
        ImageIcon imagen=new ImageIcon(getClass().getResource("/cursores/escribir.png"));
        Toolkit t=Toolkit.getDefaultToolkit();
        escribir=t.createCustomCursor(imagen.getImage(), new Point(1,1), "cursor");
        txtf_convertir.setCursor(escribir);
    }//GEN-LAST:event_txtf_convertirMouseEntered

    private void btn_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarActionPerformed
        txtf_convertir.setText("");
        lbl_conversion.setText("");
        btn_convertir.setEnabled(false);
        btn_limpiar.setEnabled(false);
    }//GEN-LAST:event_btn_limpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Convertidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Convertidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Convertidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Convertidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Convertidor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_salir;
    private javax.swing.JButton btn_convertir;
    private javax.swing.JButton btn_limpiar;
    private javax.swing.JButton btn_minimizar;
    private javax.swing.JComboBox<String> cmb_a;
    private javax.swing.JComboBox<String> cmb_de;
    private javax.swing.JComboBox<String> cmb_unidades;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lb_encabezado;
    private javax.swing.JLabel lbl_a;
    private javax.swing.JLabel lbl_conversion;
    private javax.swing.JLabel lbl_convertir;
    private javax.swing.JLabel lbl_de;
    private javax.swing.JLabel lbl_fondo;
    private javax.swing.JLabel lbl_resultado;
    private javax.swing.JLabel lbl_unidad;
    private javax.swing.JTextField txtf_convertir;
    // End of variables declaration//GEN-END:variables
}
